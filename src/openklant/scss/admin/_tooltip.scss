/**
 * Replace the form field help text with a tooltip icon by default,
 * displaying the content on hover.
 *
 * Appearance/variables can be tweaked in ../vars.scss.
 *
 * The django markup (since 4.2) is typically of the form:
 *
 *   <div class="form-row">
 *     <ul class="errorlist">...</ul>
 *     <div>
 *       <!-- possibly there are errors here too -->
 *       <div class="flex-container"></div>
 *       <div class="help"><div>...</div></div>
 *     </div>
 *   </div>
 *
 * The implementation uses the :has pseudo selector to target the relevant nodes, so
 * that we don't have to override the django field templates/markup. Modern browsers
 * support this, on old browsers this will degrade to the default django admin styles.
 *
 * There are a number of cases to consider when applying this CSS:
 *
 * - form row with a single field or multiple fields (.fieldBox selector present or not)
 * - form field with or without validation errors - complicated by the above.
 *
 * They require specific attention to the styling.
 */

// ensure that we *only* display the tooltip icon in the 'normal' state
div.help {
    cursor: help;
    block-size: 14px;
    inline-size: 14px;
  
    background-image: url(../admin/img/icon-unknown.svg);
    background-repeat: no-repeat;
    background-size: 14px;
    margin-inline: 0 !important;
    margin-block: 0 !important;
    padding-inline: 0 !important;
    padding-block: 0 !important;
  
    position: relative; // provides an anchor for the nested div absolute positioning
  
    // the actual content is nested in a div, so we can easily hide it by default
    > div {
      display: none;
    }
  
    // On hover of the icon, we display the real help text content.
    &:hover {
      background-image: none;
  
      > div {
        display: block;
        position: absolute;
        top: 1px;
        z-index: 10;
  
        block-size: auto;
        inline-size: max-content;
        max-inline-size: 300px;
        padding-block: 5px 3px;
        padding-inline: 5px 5px;
  
        background-color: #fffeaa;
        border: solid 1px #f7f071;
        color: #000;
      }
    }
  }

/**
 * Help text for datetime field is without inner div
 */
div.help:not(:has(div)) {
  cursor: help;
  width: 16px;
  height: 16px;
  background-image: url(../admin/img/icon-unknown.svg);
  display: inline-block;
  background-repeat: no-repeat;
  background-size: 14px;
  margin-left: 8px !important;
  margin-top: 6px !important;
  position: absolute;
  text-indent: -9999px;

  &:hover {
    text-indent: inherit;
    width: auto;
    background-image: none;
    background-color: #fffeaa;
    border: solid 1px #f7f071;
    color: #000;
    padding: 5px 5px 3px 5px !important;
    max-width: 300px;
    height: auto !important;
    margin-top: 2px !important;
    z-index: 10;
  }
}
  // Unsure why Django hides the overflow here :/
  .form-row:has(.help) {
    overflow: visible;
  }
  
  // field on a single form row with multiple fields, without validation errors
  div:has(> .fieldBox + .help) {
    display: grid;
    grid-template-columns: auto 14px;
    column-gap: 2px;
  
    // move the margin right (djagno's styles) from fieldbox to the parent so that the
    // tooltip is not too far away
    margin-right: 20px;
    > .fieldBox {
      margin-right: 0;
    }
  }
  
  // field on a single form row with multiple fields, with validation errors
  div:has(> .errorlist + .fieldBox + .help) {
    // split the 1-row, 2-columns up into 2-rows, 2 columns and make sure the top
    // row is assigned to the validation errors.
    // The rest of the styles are shared with the regular fieldBox styles.
    grid-template-areas:
      'errors errors'
      'field tooltip';
  
    > .errorlist {
      grid-area: errors;
      margin-bottom: 0;
    }
  }
  
  // field, alone on single form row (with/without validation errors)
  div:has(> .help):not(:has(> .fieldBox)) {
    display: flex;
    column-gap: 2px;
  }
