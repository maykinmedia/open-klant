# Generated by Django 3.2.23 on 2024-01-17 11:47

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Organisatie",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "adres_adresregel1",
                    models.CharField(
                        blank=True,
                        help_text="Eerste deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 1",
                    ),
                ),
                (
                    "adres_adresregel2",
                    models.CharField(
                        blank=True,
                        help_text="Tweede deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 2",
                    ),
                ),
                (
                    "adres_adresregel3",
                    models.CharField(
                        blank=True,
                        help_text="Derde deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 3",
                    ),
                ),
                (
                    "adres_land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van de organisatie.",
                        unique=True,
                    ),
                ),
                (
                    "handelsnaam",
                    models.CharField(
                        help_text="De naam waaronder een bedrijf of vestiging handelt.",
                        max_length=255,
                        verbose_name="handelsnaam",
                    ),
                ),
                (
                    "oprichtingsdatum",
                    models.DateField(
                        help_text="Aanduiding van datum volgens de NEN-ISO 8601:2019-standaard. Een datum wordt genoteerd van het meest naar het minst significante onderdeel. Een voorbeeld: 2022-02-21",
                        null=True,
                        verbose_name="oprichtingsdatum",
                    ),
                ),
                (
                    "opheffingsdatum",
                    models.DateField(
                        help_text="Aanduiding van datum volgens de NEN-ISO 8601:2019-standaard. Een datum wordt genoteerd van het meest naar het minst significante onderdeel. Een voorbeeld: 2022-02-21",
                        null=True,
                        verbose_name="opheffingsdatum",
                    ),
                ),
                (
                    "land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
            ],
            options={
                "verbose_name": "organisatie",
                "verbose_name_plural": "organisaties",
            },
        ),
        migrations.CreateModel(
            name="Persoon",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "adres_adresregel1",
                    models.CharField(
                        blank=True,
                        help_text="Eerste deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 1",
                    ),
                ),
                (
                    "adres_adresregel2",
                    models.CharField(
                        blank=True,
                        help_text="Tweede deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 2",
                    ),
                ),
                (
                    "adres_adresregel3",
                    models.CharField(
                        blank=True,
                        help_text="Derde deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 3",
                    ),
                ),
                (
                    "adres_land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van het persoon.",
                        unique=True,
                    ),
                ),
                (
                    "geboortedatum",
                    models.DateField(
                        help_text="Aanduiding van datum volgens de NEN-ISO 8601:2019-standaard. Een datum wordt genoteerd van het meest naar het minst significante onderdeel. Een voorbeeld: 2022-02-21",
                        verbose_name="geboortedatum",
                    ),
                ),
                (
                    "overlijdensdatum",
                    models.DateField(
                        help_text="Aanduiding van datum volgens de NEN-ISO 8601:2019-standaard. Een datum wordt genoteerd van het meest naar het minst significante onderdeel. Een voorbeeld: 2022-02-21",
                        null=True,
                        verbose_name="overlijdensdatum",
                    ),
                ),
                (
                    "geslachtsnaam",
                    models.CharField(
                        help_text="De (geslachts)naam waarvan de eventueel aanwezige voorvoegsels zijn afgesplitst. Gebruik van de wildcard is toegestaan bij invoer van ten minste 3 letters. Zoeken met tekstvelden is case-insensitive.",
                        max_length=200,
                        verbose_name="geslachtsnaam",
                    ),
                ),
                (
                    "geslacht",
                    models.CharField(
                        blank=True,
                        choices=[("m", "Man"), ("v", "Vrouw"), ("o", "Overig")],
                        help_text="Geeft aan dat de persoon een man of een vrouw is, of dat het geslacht (nog) onbekend is.",
                        max_length=1,
                        verbose_name="geslacht",
                    ),
                ),
                (
                    "voorvoegsel",
                    models.CharField(
                        blank=True,
                        help_text="Deel van de geslachtsnaam dat vooraf gaat aan de rest van de geslachtsnaam. Zoeken met tekstvelden is case-insensitive.",
                        max_length=10,
                        verbose_name="voorvoegsel",
                    ),
                ),
                (
                    "voornamen",
                    models.CharField(
                        blank=True,
                        help_text="De verzameling namen die, gescheiden door spaties, aan de geslachtsnaam voorafgaat. Gebruik van de wildcard is toegestaan. Zoeken met tekstvelden is case-insensitive.",
                        max_length=200,
                        verbose_name="voornamen",
                    ),
                ),
                (
                    "land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
            ],
            options={
                "verbose_name": "persoon",
                "verbose_name_plural": "personen",
            },
        ),
    ]
