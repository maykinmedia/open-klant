# Generated by Django 4.2.17 on 2025-01-27 14:35

import logging
import django.core.validators
import openklant.utils.validators
from django.db import migrations, models
import openklant.utils.validators
from openklant.utils.constants import COUNTRIES_DICT
from django.db import IntegrityError

logger = logging.getLogger(__name__)

FIELDS = ["bezoekadres_land", "correspondentieadres_land"]


def _check_records(records):
    total_failed_records = 0
    for record in records:
        record_failed = False
        for field_name in FIELDS:
            field_value = getattr(record, field_name, None)
            iso_code = COUNTRIES_DICT.get(field_value, "")
            if field_value and not iso_code:
                record_failed = True
                logger.warning(
                    "%s(pk=%s, uuid=%s) Field: '%s'. No match found for nl_code (not found in Tabel 34 Landentabel): '%s'",
                    type(record).__qualname__,
                    record.pk,
                    record.uuid,
                    field_name,
                    field_value,
                )

        if record_failed:
            total_failed_records += 1
    return total_failed_records


def _update_records(records):
    for record in records:
        updated = False
        for field_name in FIELDS:
            if field_value := getattr(record, field_name, None):
                iso_code = COUNTRIES_DICT.get(field_value, "")
                setattr(record, field_name, iso_code)
                updated = True

        if updated:
            record.save()


def _check_and_update_records(apps, schema_editor):
    Betrokkene = apps.get_model("klantinteracties", "Betrokkene")
    Partij = apps.get_model("klantinteracties", "Partij")

    for model in [Betrokkene, Partij]:
        records = model.objects.all()
        if total_failed_records := _check_records(records):
            raise IntegrityError(
                "The migration cannot proceed due to %s records that don't comply with the %s model's requirements. "
                "Possible data inconsistency or mapping error."
                % (total_failed_records, model.__qualname__)
            )
        else:
            _update_records(records)


class Migration(migrations.Migration):

    dependencies = [
        (
            "klantinteracties",
            "0025_alter_partijidentificator_partij_identificator_code_objecttype_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(
            code=_check_and_update_records,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.AlterField(
            model_name="betrokkene",
            name="bezoekadres_land",
            field=models.CharField(
                blank=True,
                help_text="ISO 3166-code die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                max_length=2,
                validators=[
                    django.core.validators.MinLengthValidator(limit_value=2),
                    openklant.utils.validators.validate_country,
                ],
                verbose_name="land",
            ),
        ),
        migrations.AlterField(
            model_name="betrokkene",
            name="correspondentieadres_land",
            field=models.CharField(
                blank=True,
                help_text="ISO 3166-code die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                max_length=2,
                validators=[
                    django.core.validators.MinLengthValidator(limit_value=2),
                    openklant.utils.validators.validate_country,
                ],
                verbose_name="land",
            ),
        ),
        migrations.AlterField(
            model_name="partij",
            name="bezoekadres_land",
            field=models.CharField(
                blank=True,
                help_text="ISO 3166-code die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                max_length=2,
                validators=[
                    django.core.validators.MinLengthValidator(limit_value=2),
                    openklant.utils.validators.validate_country,
                ],
                verbose_name="land",
            ),
        ),
        migrations.AlterField(
            model_name="partij",
            name="correspondentieadres_land",
            field=models.CharField(
                blank=True,
                help_text="ISO 3166-code die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                max_length=2,
                validators=[
                    django.core.validators.MinLengthValidator(limit_value=2),
                    openklant.utils.validators.validate_country,
                ],
                verbose_name="land",
            ),
        ),
    ]
