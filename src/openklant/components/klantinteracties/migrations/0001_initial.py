# Generated by Django 3.2.18 on 2023-10-19 13:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Actor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identificator_objecttype",
                    models.CharField(
                        help_text="Type van het object, bijvoorbeeld: 'INGESCHREVEN NATUURLIJK PERSOON'.",
                        max_length=200,
                        verbose_name="objecttype",
                    ),
                ),
                (
                    "identificator_soort_object_id",
                    models.CharField(
                        help_text="Naam van de eigenschap die het object identificeert, bijvoorbeeld: 'Burgerservicenummer'.",
                        max_length=200,
                        verbose_name="soort object id",
                    ),
                ),
                (
                    "identificator_object_id",
                    models.CharField(
                        help_text="Waarde van de eigenschap die het object identificeert, bijvoorbeeld: '123456788'.",
                        max_length=200,
                        verbose_name="object id",
                    ),
                ),
                (
                    "identificator_register",
                    models.CharField(
                        help_text="Binnen het landschap van registers unieke omschrijving van het register waarin het object is geregistreerd, bijvoorbeeld: 'BRP'.",
                        max_length=200,
                        verbose_name="register",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van de actor.",
                        unique=True,
                    ),
                ),
                (
                    "naam",
                    models.CharField(
                        help_text="Naam van de actor.",
                        max_length=200,
                        verbose_name="naam",
                    ),
                ),
                (
                    "soort_actor",
                    models.CharField(
                        choices=[
                            ("medewerker", "Medewerker"),
                            ("geautomatiseerde_actor", "Geautomatiseerde actor"),
                            ("organisatorische_eenheid", "Organisatorische eenheid"),
                        ],
                        help_text="Geeft aan van welke specifieke soort actor sprake is.",
                        max_length=24,
                        verbose_name="soort actor",
                    ),
                ),
                (
                    "indicatie_actief",
                    models.BooleanField(
                        default=True,
                        help_text="Geeft aan of aan de actor nog betrokken mag worden bij nieuwe klantcontacten. Voor niet-actieve is dit niet toegestaan.",
                        verbose_name="indicatie actief",
                    ),
                ),
            ],
            options={
                "verbose_name": "actor",
                "verbose_name_plural": "actoren",
            },
        ),
        migrations.CreateModel(
            name="Betrokkene",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bezoekadres_nummeraanduiding_id",
                    models.CharField(
                        blank=True,
                        help_text="Identificatie van het adres bij de Basisregistratie Adressen en Gebouwen.",
                        max_length=255,
                        verbose_name="nummeraanduiding id",
                    ),
                ),
                (
                    "bezoekadres_adresregel1",
                    models.CharField(
                        blank=True,
                        help_text="Eerste deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 1",
                    ),
                ),
                (
                    "bezoekadres_adresregel2",
                    models.CharField(
                        blank=True,
                        help_text="Tweede deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 2",
                    ),
                ),
                (
                    "bezoekadres_adresregel3",
                    models.CharField(
                        blank=True,
                        help_text="Derde deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 3",
                    ),
                ),
                (
                    "bezoekadres_land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
                (
                    "correspondentieadres_nummeraanduiding_id",
                    models.CharField(
                        blank=True,
                        help_text="Identificatie van het adres bij de Basisregistratie Adressen en Gebouwen.",
                        max_length=255,
                        verbose_name="nummeraanduiding ID",
                    ),
                ),
                (
                    "correspondentieadres_adresregel1",
                    models.CharField(
                        blank=True,
                        help_text="Eerste deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 1",
                    ),
                ),
                (
                    "correspondentieadres_adresregel2",
                    models.CharField(
                        blank=True,
                        help_text="Tweede deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 2",
                    ),
                ),
                (
                    "correspondentieadres_adresregel3",
                    models.CharField(
                        blank=True,
                        help_text="Derde deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 3",
                    ),
                ),
                (
                    "correspondentieadres_land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
                (
                    "contactnaam_voorletters",
                    models.CharField(
                        help_text="Een afkorting van de voornamen. Meestal de beginletter, maar in sommige gevallen de beginletter gecombineerd met de tweede letter van een voornaam.",
                        max_length=10,
                        verbose_name="voorletters",
                    ),
                ),
                (
                    "contactnaam_voornaam",
                    models.CharField(
                        blank=True,
                        help_text="De voornaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=200,
                        verbose_name="voornaam",
                    ),
                ),
                (
                    "contactnaam_voorvoegsel_achternaam",
                    models.CharField(
                        blank=True,
                        help_text="Een eventueel voorvoegsel dat hoort bij de achternaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=10,
                        verbose_name="voorvoegsel achternaam",
                    ),
                ),
                (
                    "contactnaam_achternaam",
                    models.CharField(
                        blank=True,
                        help_text="Een achternaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=200,
                        verbose_name="achternaam",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van de betrokkene bij klantcontact.",
                        unique=True,
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("vertegenwoordiger", "Vertegenwoordiger"),
                            ("klant", "Klant"),
                        ],
                        help_text="Rol die de betrokkene bij klantcontact tijdens dat contact vervulde.",
                        max_length=17,
                        verbose_name="rol",
                    ),
                ),
                (
                    "organisatienaam",
                    models.CharField(
                        blank=True,
                        help_text="Naam van de organisatie waarmee de betrokkene bij klantcontact een relatie had.",
                        max_length=200,
                        verbose_name="organisatienaam",
                    ),
                ),
                ("initiator", models.BooleanField(verbose_name="initiator")),
            ],
            options={
                "verbose_name": "betrokkene bij klantcontact",
            },
        ),
        migrations.CreateModel(
            name="DigitaalAdres",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van het digitaal adres.",
                        unique=True,
                    ),
                ),
                (
                    "soort_digitaal_adres",
                    models.CharField(
                        help_text="Typering van het digitale adres die aangeeft via welk(e) kanaal of kanalen met dit adres contact kan worden opgenomen.",
                        max_length=255,
                        verbose_name="soort digitaal adres",
                    ),
                ),
                (
                    "adres",
                    models.CharField(
                        help_text="Digitaal adres waarmee een persoon of organisatie bereikt kan worden.",
                        max_length=80,
                        verbose_name="adres",
                    ),
                ),
                (
                    "omschrijving",
                    models.CharField(
                        help_text="Omschrijving van het digitaal adres.",
                        max_length=40,
                        verbose_name="omschrijving",
                    ),
                ),
            ],
            options={
                "verbose_name": "digitaal adres",
            },
        ),
        migrations.CreateModel(
            name="Partij",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bezoekadres_nummeraanduiding_id",
                    models.CharField(
                        blank=True,
                        help_text="Identificatie van het adres bij de Basisregistratie Adressen en Gebouwen.",
                        max_length=255,
                        verbose_name="nummeraanduiding id",
                    ),
                ),
                (
                    "bezoekadres_adresregel1",
                    models.CharField(
                        blank=True,
                        help_text="Eerste deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 1",
                    ),
                ),
                (
                    "bezoekadres_adresregel2",
                    models.CharField(
                        blank=True,
                        help_text="Tweede deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 2",
                    ),
                ),
                (
                    "bezoekadres_adresregel3",
                    models.CharField(
                        blank=True,
                        help_text="Derde deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 3",
                    ),
                ),
                (
                    "bezoekadres_land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
                (
                    "correspondentieadres_nummeraanduiding_id",
                    models.CharField(
                        blank=True,
                        help_text="Identificatie van het adres bij de Basisregistratie Adressen en Gebouwen.",
                        max_length=255,
                        verbose_name="nummeraanduiding ID",
                    ),
                ),
                (
                    "correspondentieadres_adresregel1",
                    models.CharField(
                        blank=True,
                        help_text="Eerste deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 1",
                    ),
                ),
                (
                    "correspondentieadres_adresregel2",
                    models.CharField(
                        blank=True,
                        help_text="Tweede deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 2",
                    ),
                ),
                (
                    "correspondentieadres_adresregel3",
                    models.CharField(
                        blank=True,
                        help_text="Derde deel van het adres dat niet voorkomt in de Basisregistratie Adressen en Gebouwen.",
                        max_length=80,
                        verbose_name="adresregel 3",
                    ),
                ),
                (
                    "correspondentieadres_land",
                    models.CharField(
                        blank=True,
                        help_text="Een code, opgenomen in Tabel 34, Landentabel, die het land (buiten Nederland) aangeeft alwaar de ingeschrevene verblijft.",
                        max_length=4,
                        validators=[
                            django.core.validators.MinLengthValidator(limit_value=4),
                            django.core.validators.validate_integer,
                        ],
                        verbose_name="land",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van de partij.",
                        unique=True,
                    ),
                ),
                (
                    "nummer",
                    models.CharField(
                        help_text="Uniek identificerend nummer dat tijdens communicatie tussen mensen kan worden gebruikt om de specifieke partij aan te duiden.",
                        max_length=10,
                        validators=[django.core.validators.validate_integer],
                        verbose_name="nummer",
                    ),
                ),
                (
                    "interne_notitie",
                    models.TextField(
                        blank=True,
                        help_text="Mededelingen, aantekeningen of bijzonderheden over de partij, bedoeld voor intern gebruik.",
                        max_length=1000,
                        verbose_name="interne notitie",
                    ),
                ),
                (
                    "soort_partij",
                    models.CharField(
                        choices=[
                            ("persoon", "Persoon"),
                            ("organisatie", "Organisatie"),
                            ("contactpersoon", "Contactpersoon"),
                        ],
                        help_text="Geeft aan van welke specifieke soort partij sprake is.",
                        max_length=14,
                        verbose_name="soort partij",
                    ),
                ),
                (
                    "indicatie_geheimhouding",
                    models.BooleanField(
                        help_text="Geeft aan of de verstrekker van partijgegevens heeft aangegeven dat deze gegevens als geheim beschouwd moeten worden.",
                        verbose_name="indicatie geheimhouding",
                    ),
                ),
                (
                    "voorkeurstaal",
                    models.CharField(
                        blank=True,
                        help_text="Taal, in ISO 639-2/B formaat, waarin de partij bij voorkeur contact heeft met de gemeente. Voorbeeld: nld. Zie: https://www.iso.org/standard/4767.html",
                        max_length=3,
                        verbose_name="voorkeurstaal",
                    ),
                ),
                (
                    "indicatie_actief",
                    models.BooleanField(
                        help_text="Geeft aan of de contactgegevens van de partij nog gebruikt morgen worden om contact op te nemen. Gegevens van niet-actieve partijen mogen hiervoor niet worden gebruikt.",
                        verbose_name="indicatie actief",
                    ),
                ),
                (
                    "betrokkene",
                    models.ForeignKey(
                        help_text="'Betrokkene bij klantcontact' was 'Partij'",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.betrokkene",
                        verbose_name="betrokkene",
                    ),
                ),
                (
                    "digitaal_adres",
                    models.ForeignKey(
                        help_text="'Digitaal Adres' was 'Partij'",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.digitaaladres",
                        verbose_name="digitaal adres",
                    ),
                ),
                (
                    "vertegenwoordigde",
                    models.ManyToManyField(
                        blank=True,
                        help_text="'Partij' die een andere 'Partij' vertegenwoordigde.",
                        null=True,
                        related_name="_klantinteracties_partij_vertegenwoordigde_+",
                        to="klantinteracties.Partij",
                        verbose_name="vertegenwoordigde",
                    ),
                ),
                (
                    "voorkeurs_digitaal_adres",
                    models.ForeignKey(
                        help_text="'Partij' gaf voorkeur aan voor contact via 'Digitaal adres'",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="voorkeurs_partij",
                        to="klantinteracties.digitaaladres",
                        verbose_name="voorkeurs digitaal adres",
                    ),
                ),
            ],
            options={
                "verbose_name": "partij",
                "verbose_name_plural": "partijen",
            },
        ),
        migrations.CreateModel(
            name="Persoon",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contactnaam_voorletters",
                    models.CharField(
                        help_text="Een afkorting van de voornamen. Meestal de beginletter, maar in sommige gevallen de beginletter gecombineerd met de tweede letter van een voornaam.",
                        max_length=10,
                        verbose_name="voorletters",
                    ),
                ),
                (
                    "contactnaam_voornaam",
                    models.CharField(
                        blank=True,
                        help_text="De voornaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=200,
                        verbose_name="voornaam",
                    ),
                ),
                (
                    "contactnaam_voorvoegsel_achternaam",
                    models.CharField(
                        blank=True,
                        help_text="Een eventueel voorvoegsel dat hoort bij de achternaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=10,
                        verbose_name="voorvoegsel achternaam",
                    ),
                ),
                (
                    "contactnaam_achternaam",
                    models.CharField(
                        blank=True,
                        help_text="Een achternaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=200,
                        verbose_name="achternaam",
                    ),
                ),
                (
                    "partij",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.partij",
                        unique=True,
                        verbose_name="partij",
                    ),
                ),
            ],
            options={
                "verbose_name": "persoon",
                "verbose_name_plural": "personen",
            },
        ),
        migrations.CreateModel(
            name="OrganisatorischeEenheid",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "omschrijving",
                    models.CharField(
                        blank=True,
                        help_text="Omschrijving van de geautomatiseerde actor.",
                        max_length=200,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "emailadres",
                    models.EmailField(
                        blank=True,
                        help_text="Elektronisch postadres waaronder de MEDEWERKER in de regel bereikbaar is.",
                        max_length=254,
                        verbose_name="e-mailadres",
                    ),
                ),
                (
                    "faxnummer",
                    models.CharField(
                        help_text="Faxnummer waaronder de organisatorische eenheid in de regel bereikbaar is.",
                        max_length=20,
                        verbose_name="faxnummer",
                    ),
                ),
                (
                    "telefoonnummer",
                    models.CharField(
                        help_text="Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.",
                        max_length=20,
                        verbose_name="telefoonnummer",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        help_text="'GeautomatiseerdeActor' was 'Actor'",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.actor",
                        unique=True,
                        verbose_name="actor",
                    ),
                ),
            ],
            options={
                "verbose_name": "organisatorische eenheid",
            },
        ),
        migrations.CreateModel(
            name="Organisatie",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "naam",
                    models.CharField(
                        blank=True,
                        help_text="Naam van de organisatie.",
                        max_length=200,
                        verbose_name="naam",
                    ),
                ),
                (
                    "partij",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.partij",
                        unique=True,
                        verbose_name="partij",
                    ),
                ),
            ],
            options={
                "verbose_name": "organisatie",
                "verbose_name_plural": "organisaties",
            },
        ),
        migrations.CreateModel(
            name="Medewerker",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "functie",
                    models.CharField(
                        help_text="Functie van de geautomatiseerde actor of beschrijving van de werkzaamheden die deze uitvoert.",
                        max_length=40,
                        verbose_name="functie",
                    ),
                ),
                (
                    "emailadres",
                    models.EmailField(
                        blank=True,
                        help_text="Elektronisch postadres waaronder de MEDEWERKER in de regel bereikbaar is.",
                        max_length=254,
                        verbose_name="e-mailadres",
                    ),
                ),
                (
                    "telefoonnummer",
                    models.CharField(
                        help_text="Telefoonnummer waaronder de MEDEWERKER in de regel bereikbaar is.",
                        max_length=20,
                        verbose_name="telefoonnummer",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        help_text="'GeautomatiseerdeActor' was 'Actor'",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.actor",
                        verbose_name="actor",
                    ),
                ),
            ],
            options={
                "verbose_name": "medewerker",
                "verbose_name_plural": "mederwerkers",
            },
        ),
        migrations.CreateModel(
            name="Klantcontact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van de betrokkene bij klantcontact.",
                        unique=True,
                    ),
                ),
                (
                    "nummer",
                    models.CharField(
                        help_text="Uniek identificerend nummer dat tijdens communicatie tussen mensen kan worden gebruikt om het specifieke klantcontact aan te duiden.",
                        max_length=10,
                        validators=[django.core.validators.validate_integer],
                        verbose_name="nummer",
                    ),
                ),
                (
                    "kanaal",
                    models.CharField(
                        help_text="Communicatiekanaal dat bij het klantcontact werd gebruikt.",
                        max_length=50,
                        verbose_name="kanaal",
                    ),
                ),
                (
                    "onderwerp",
                    models.CharField(
                        help_text="Datgene waarover het klantcontact ging.",
                        max_length=200,
                        verbose_name="onderwerp",
                    ),
                ),
                (
                    "inhoud",
                    models.TextField(
                        blank=True,
                        help_text="Informatie die tijdens het klantcontact werd overgebracht of uitgewisseld, voor zover die voor betrokkenen of actoren relevant is.",
                        max_length=1000,
                        verbose_name="inhoud",
                    ),
                ),
                (
                    "indicatie_contact_gelukt",
                    models.BooleanField(
                        help_text="Geeft, indien bekend, aan of de poging contact tussen de gemeente en inwoner(s) of organisatie(s) tot stand te brengen succesvol was.",
                        null=True,
                        verbose_name="indicatie contact gelukt",
                    ),
                ),
                (
                    "taal",
                    models.CharField(
                        help_text="Taal die bij het klantcontact werd gesproken of geschreven.",
                        max_length=255,
                        verbose_name="taal",
                    ),
                ),
                (
                    "vertrouwelijk",
                    models.BooleanField(
                        help_text="Geeft aan of onderwerp, inhoud en kenmerken van het klantcontact vertrouwelijk moeten worden behandeld.",
                        verbose_name="vertrouwelijk",
                    ),
                ),
                (
                    "plaatsgevonden_op",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Datum en tijdstip waarop het klantontact plaatsvond. Als het klantcontact een gesprek betrof, is dit het moment waarop het gesprek begon. Als het klantcontact verzending of ontvangst van informatie betrof, is dit bij benadering het moment waarop informatie door gemeente verzonden of ontvangen werd.",
                        verbose_name="plaatsgevonden op",
                    ),
                ),
                (
                    "actoren",
                    models.ManyToManyField(
                        help_text="De actoren die tijdens het klantcontant contact had met klanten of hun vertegenwoordigers.",
                        related_name="klantcontacten",
                        to="klantinteracties.Actor",
                        verbose_name="actoren",
                    ),
                ),
            ],
            options={
                "verbose_name": "klantcontact",
                "verbose_name_plural": "klantcontacten",
            },
        ),
        migrations.CreateModel(
            name="InterneTaak",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unieke (technische) identificatiecode van de interne taak.",
                        unique=True,
                    ),
                ),
                (
                    "nummer",
                    models.CharField(
                        help_text="Uniek identificerend nummer dat tijdens communicatie tussen mensen kan worden gebruikt om de specifieke interne taak aan te duiden.",
                        max_length=10,
                        validators=[django.core.validators.validate_integer],
                        verbose_name="nummer",
                    ),
                ),
                (
                    "gevraagde_handeling",
                    models.CharField(
                        help_text="Handeling die moet worden uitgevoerd om de taak af te ronden.",
                        max_length=200,
                        verbose_name="gevraagde handeling",
                    ),
                ),
                (
                    "toelichting",
                    models.TextField(
                        help_text="Toelichting die, aanvullend bij de inhoud van het klantcontact dat aanleiding gaf tot de taak en de gevraagde handeling, bijdraagt aan het kunnen afhandelen van de taak.",
                        max_length=400,
                        verbose_name="toelichting",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("te_verwerken", "Het verzoek is afgehandeld."),
                            ("verwerkt", "Het verzoek id buiten behandeling gesteld."),
                        ],
                        help_text="Aanduiding van de vordering bij afhandeling van de interne taak.",
                        max_length=12,
                        verbose_name="status",
                    ),
                ),
                (
                    "toegewezen_op",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Datum en tijdstip waarop de interne taak aan een actor werd toegewezen.",
                        verbose_name="toegewezen op",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        help_text="De actor aan wie de interne taak werd toegewezen.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.actor",
                        verbose_name="actor",
                    ),
                ),
                (
                    "klantcontact",
                    models.ForeignKey(
                        help_text="Het klantcontact dat aanleiding gaf tot het ontstaan van een interne taak.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.klantcontact",
                        verbose_name="klantcontact",
                    ),
                ),
            ],
            options={
                "verbose_name": "interne taak",
                "verbose_name_plural": "interne taken",
            },
        ),
        migrations.CreateModel(
            name="GeautomatiseerdeActor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "functie",
                    models.CharField(
                        help_text="Functie van de geautomatiseerde actor of beschrijving van de werkzaamheden die deze uitvoert.",
                        max_length=40,
                        verbose_name="functie",
                    ),
                ),
                (
                    "omschrijving",
                    models.CharField(
                        blank=True,
                        help_text="Omschrijving van de geautomatiseerde actor.",
                        max_length=200,
                        verbose_name="omschrijving",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        help_text="'GeautomatiseerdeActor' was 'Actor'",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.actor",
                        verbose_name="Actor",
                    ),
                ),
            ],
            options={
                "verbose_name": "geautomatiseerde actor",
                "verbose_name_plural": "geautomatiseerde actoren",
            },
        ),
        migrations.CreateModel(
            name="Contactpersoon",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contactnaam_voorletters",
                    models.CharField(
                        help_text="Een afkorting van de voornamen. Meestal de beginletter, maar in sommige gevallen de beginletter gecombineerd met de tweede letter van een voornaam.",
                        max_length=10,
                        verbose_name="voorletters",
                    ),
                ),
                (
                    "contactnaam_voornaam",
                    models.CharField(
                        blank=True,
                        help_text="De voornaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=200,
                        verbose_name="voornaam",
                    ),
                ),
                (
                    "contactnaam_voorvoegsel_achternaam",
                    models.CharField(
                        blank=True,
                        help_text="Een eventueel voorvoegsel dat hoort bij de achternaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=10,
                        verbose_name="voorvoegsel achternaam",
                    ),
                ),
                (
                    "contactnaam_achternaam",
                    models.CharField(
                        blank=True,
                        help_text="Een achternaam die de persoon wil gebruiken tijdens communicatie met de gemeente.",
                        max_length=200,
                        verbose_name="achternaam",
                    ),
                ),
                (
                    "organisatie",
                    models.ForeignKey(
                        help_text="De organisatie waar een contactpersoon voor werkt.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.organisatie",
                        verbose_name="organistatie",
                    ),
                ),
                (
                    "partij",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="klantinteracties.partij",
                        unique=True,
                        verbose_name="partij",
                    ),
                ),
            ],
            options={
                "verbose_name": "contact persoon",
                "verbose_name_plural": "contact personen",
            },
        ),
        migrations.AddField(
            model_name="betrokkene",
            name="digitaal_adres",
            field=models.ForeignKey(
                help_text="'Digitaal Adres' had 'Betrokkene bij klantcontact'",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="klantinteracties.digitaaladres",
                verbose_name="digitaal adres",
            ),
        ),
        migrations.AddField(
            model_name="betrokkene",
            name="klantcontact",
            field=models.ForeignKey(
                help_text="'Klantcontact' had 'Betrokkene bij klantcontact'",
                on_delete=django.db.models.deletion.CASCADE,
                to="klantinteracties.klantcontact",
                verbose_name="klantcontact",
            ),
        ),
    ]
